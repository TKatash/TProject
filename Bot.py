import telebot
from moviepy.editor import *
from pytube import YouTube
from telebot.types import *
import requests

TOKEN = 'Your token'


def download_video(message: Message):
    try:
        url = message.text.strip()
        yt = YouTube(url)
        video = yt.streams.get_lowest_resolution()
        bot.reply_to(message, "–°–∫–∞—á–∏–≤–∞—é...")
        video.download(filename="video.mp4")
        bot.reply_to(message, "Done")
        bot.send_message(message.chat.id, "–ß—Ç–æ –¥–∞–ª—å—à–µ? –í –∫–æ–Ω—Ü–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤—ã–π–¥–∏!", reply_markup=buttons)
    except Exception as e:
        print(e)
        bot.reply_to(message, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫. –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–π url")


bot = telebot.TeleBot(TOKEN)

keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton('–î–∞–π –∫–æ—Ç–∞'))
keyboard.add(KeyboardButton('–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ'))
buttons = InlineKeyboardMarkup()
buttons.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –≤–∏–¥–µ–æüé•', callback_data='get_video'))
buttons.add(InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –∞—É–¥–∏–æüé∂', callback_data='get_audio'))
buttons.add(InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data='exit'))


@bot.message_handler(commands=['help', 'start'])
def send_welcome(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç. –ß—Ç–æ–±—ã –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ Youtube –≤ –∞—É–¥–∏–æ, –Ω–∞–∂–º–∏ —Å–æ–æ—Ç–≤–µ—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É', reply_markup=keyboard)


@bot.message_handler(regexp=r'–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ.*')
def converter(message):
    bot.send_message(message.chat.id, "–°–∫–æ–ø–∏—Ä—É–π url –≤–∏–¥–µ–æ:")
    bot.register_next_step_handler(message, download_video)


@bot.callback_query_handler(func=lambda callback: True)
def callback_sender(callback):
    if callback.data == 'get_video':
        try:
            file = open('video.mp4', 'rb')
            bot.send_message(callback.message.chat.id, "–ü–æ—Å—ã–ª–∞—é –≤–∏–¥–µ–æ")
            bot.send_video(callback.message.chat.id, video=file, timeout=10000)
            bot.send_message(callback.message.chat.id, "–ì–æ—Ç–æ–≤–æ")
            file.close()
        except Exception as e:
            print(e)
            bot.send_message(callback.message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫")

    if callback.data == 'get_audio':
        try:
            audio = AudioFileClip("video.mp4")
            audio.write_audiofile("sound.mp3")
            file = open('sound.mp3', 'rb')
            bot.send_message(callback.message.chat.id, "–ü–æ—Å—ã–ª–∞—é –∞—É–¥–∏–æ")
            bot.send_audio(callback.message.chat.id, audio=file, timeout=10000)
            bot.send_message(callback.message.chat.id, "–ì–æ—Ç–æ–≤–æ")
            file.close()
        except Exception as e:
            print(e)
            bot.send_message(callback.message.chat.id, "–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫")
    if callback.data == 'exit':
        try:
            bot.send_message(callback.message.chat.id, "–ü–æ–∫–∞. –¢–≤–æ–∏ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞")
            os.remove("video.mp4")
            os.remove("sound.mp3")
        except Exception as e:
            pass


@bot.message_handler(func=lambda s: '–î–∞–π –∫–æ—Ç–∞' in s.text)
def send_cat(message):
    response = requests.get('https://cataas.com/cat')
    bot.send_photo(message.chat.id, response.content)


bot.infinity_polling()
